swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: get transactions depending on account
      description: API transactions depending on account
      parameters:
        - in: path
          name: accountId
          type: integer
          format: int64
          required: true
          description: ID of accounts to be get transactions
      produces:
        - application/json
      responses:
        '200':
          description: Account profile retrieved successully
          schema:
            $ref: '#/definitions/ApiAccountsResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: update information account depending on id
      description: API for update information account profile
      operationId: getTransactionById
      parameters:
        - in: path
          name: transactionId
          type: integer
          format: int64
          required: true
          description: Id of Transaction to be get information
      produces:
        - application/json
      responses:
        '200':
          description: Information Account created successfully
          schema:
            $ref: '#/definitions/ApiTransactionsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: User Transaction API depending on id
      description: API for edit information Transaction
      parameters:
        - in: path
          name: transactionId
          type: string
          required: true
          description: Id of Transaction to be edit information
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/EditInfoTransactionResponse'
      produces:
        - application/json
      responses:
        '200':
          description: Information Transaction created successfully
          schema:
            $ref: '#/definitions/ApiTransactionsResponse'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable entity
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  ApiAccountsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactions:
            type: array
            items:
              type: object
              properties:
                transactionId:
                  type: string
                date:
                  type: string
                amount:
                  type: integer
                description:
                  type: string
                transaction_type:
                  type: string
                category:
                  type: string
                note:
                  type: string
  ApiTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          transactions:
              type: object
              properties:
                transactionId:
                  type: string
                date:
                  type: string
                amount:
                  type: integer
                description:
                  type: string
                transaction_type:
                  type: string
                category:
                  type: string
                note:
                  type: string
  EditInfoTransactionResponse:
    type: object
    properties:
          category:
            type: string
          note:
            type: string